// Iniciando Projeto

  yarn init -y


// Express

  yarn add Express


// Nodemon

  yarn add nodemon -D


// Sucrase lidando com "import" e "export default"

  yarn add sucrase -D


// Bcryptjs (Hash de senha)
  yarn add bcryptjs

// Rodando servidor
  yarn dev


------------------ Instalando o Docker -----------------------------------------------

Atualize o aptíndice do pacote.
$ sudo apt-get update

Instale a versão mais recente do Docker Engine - Community and containserd, ou vá para a próxima etapa para instalar uma versão específica:
$ sudo apt-get install docker-ce docker-ce-cli containerd.io

//Instalando o postgres
(ubuntu usar sudo) docker run --name database -e POSTGRES_PASSWORD=docker -p 5432:5432 -d postgres:11
------------------------ FIM Docker -----------------------------------------

---------------- Banco de Dados -------------------------------------

// Todos os Containers

  docker ps -a

  docker ps (mostra o Container atual rodando)


// Start no Container

  docker start Nome_Container ou ID


//Verifica se tem erro no container

  docker logs NomeBanco

---------------- Fim Banco de Dados -------------------------------------

// Eslint

  yarn add eslint -D

  yarn eslint --init (instalando padrão Airbnb)


// Prettier

  yarn add prettier eslint-config-prettier eslint-plugin-prettier -D

// Sequelize

  yarn add sequelize


// Sequelize cli

  yarn add sequelize-cli -Docker


// pg pg-hstore

  yarn add pg pg-hstore



-------  Criando nossa primeira Migrations (tabela)  -----------------------------------------------

  CREATE
  yarn sequelize migration:create --name=create-users

  RODANDO A MIGRATION
  yarn sequelize db:migrate

  DESFAZENDO A MIGRATION
  yarn sequelize db:migrate:undo:all (todas)
  yarn sequelize db:migrate:undo (ultima)



-------------------- FIM Migrations --------------------------------------
